#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>

#define SIZE 1000

typedef struct {
    char data[SIZE];
    int top;
} Stack;//定义一个栈类型结构体 

void init(Stack *stack) {  //初始化栈
    stack->top = -1;
}

void push(Stack *stack, char c) {  //入栈
    if (stack->top < SIZE - 1) {
        stack->data[++stack->top] = c;
    }
}

char pop(Stack *stack) {  //出栈
    if (stack->top >= 0) {
        return stack->data[stack->top--];//若栈顶不为空 ，则记录将要删除的栈顶元素且栈顶指针减一 
    }
    return NULL;//栈顶为空，不返回任何值 
}

char peek(Stack *stack) {  //返回栈顶元素
    if (stack->top >= 0) {
        return stack->data[stack->top];
    }
    return NULL;
}

void check(FILE *file) {  //检查是否存在格式错误，若存在则输出错误位置并结束程序
    Stack stack;
    init(&stack);
    int pos = 0;  //错误位置
    int flag = 0;  //是否有错误
    char c; 
    while ((c = fgetc(file)) != EOF) {
        pos++;
        if (c == '{' || c == '[') {
            push(&stack, c);  //左括号入栈
        } else if (c == '}' || c == ']') {
            if (stack.top >= 0 && ((c == '}' && peek(&stack) == '{') || (c == ']' && peek(&stack) == '['))) {
                pop(&stack);  //检查右括号是否与左括号匹配
            } else {
                flag = 1;  //若不匹配则发生错误
                break;
            }
        }
    }
    if (stack.top != -1) {
        flag = 1;
    }
    if(flag == 0){
        printf("JSON格式正确\n");
        rewind(file);//将指针移至文件开头 
    }else{
        int line = 1, col = 1;
        fseek(file, 0, SEEK_SET);//将指针移至起始位置 
        while (--pos > 0) {
            char ch = fgetc(file);//读取文件字符 ，进行换行换列操作 
            if (ch == '\n') {
                line++;
                col = 1;
            } else {
                col++;
            }
        }
        printf("错误发生在 %d 行, %d 列。\n", line, col);
        exit(0);//关闭所有文件并终止程序 
    }
}

void printJSON(FILE *file) {  //输出到屏幕
    char c;
    Stack stack;
    init(&stack);//初始化空栈 
    int n = 0;
    while ((c = fgetc(file)) != EOF) {//按树状缩进格式输出JSON文件 
        if (c == '{' || c == '[') {
            printf("%c\n", c);
            n++;
            for (int i = 0; i < n; i++) {
                printf("    ");
            }
        } else if (c == '}' || c == ']') {
            n--;
            printf("\n");
            for (int i = 0; i < n; i++) {
                printf("    ");
            }
            printf("%c", c);
        } else if (c == ',') {
            printf(",\n");
            for (int i = 0; i < n; i++) {
                printf("    ");
            }
        } else if (!isspace(c)) {
            printf("%c", c);
        }
    }
    printf("\n");
}

void JSONtoFile(FILE *file, int flag, FILE *outputFile) {  //保存至文件，flag=0表示以树状保存，flag=1表示压缩保存
    char c;
    Stack stack;
    init(&stack);
    int n = 0;
    while ((c = fgetc(file)) != EOF) {
        if (c == '{' || c == '[') {
            if (!flag) {
                fprintf(outputFile, "%c\n", c);
                n++;
                for (int i = 0; i < n; i++) {
                    fprintf(outputFile, "    ");
                }
            } else {
                fprintf(outputFile, "%c", c);
            }
        } else if (c == '}' || c == ']') {
            n--;
            if (!flag) {
                fprintf(outputFile, "\n");
                for (int i = 0; i < n; i++) {
                    fprintf(outputFile, "    ");
                }
                fprintf(outputFile, "%c", c);
            } else {
                fprintf(outputFile, "%c", c);
            }
        } else if (c == ',' && !flag) {
            fprintf(outputFile, ",\n");
            for (int i = 0; i < n; i++) {
                fprintf(outputFile, "    ");
            }
        } else if (!isspace(c)) {
            fprintf(outputFile, "%c", c);
        }
    }
    fprintf(outputFile, "\n");
}

int main() {
    char inputFilename[50];  //输入文件名
    char outputFilename[50];  //输出文件名
    printf("请输入要选取的json文件名: ");  //读取文件
    scanf("%s", inputFilename);
    FILE *file = fopen(inputFilename, "r");
    if (file == NULL) {
        printf("文件打开失败\n");
        return 1;
    }
    check(file);  //检查格式错误
    int choice;
    printf("请选择：1. 打印到屏幕 2.写入文件:");
    scanf("%d", &choice);
    if(choice == 1){  //打印到屏幕
        printJSON(file);
    }else{  //写入文件
        printf("请输入要写入的文件名: ");
        scanf("%s", outputFilename);
        FILE *outputFile = fopen(outputFilename, "w");
        if (outputFile == NULL) {
            printf("写入错误\n");
            fclose(file);
            return 1;
        }
        printf("请选择：1. 以树状形式保存 2.以压缩形式保存:");
        scanf("%d", &choice);
        int flag;
        if(choice == 1){
            flag = 0;
        }else{
            flag = 1;
        }
        JSONtoFile(file, flag, outputFile);
    }
    fclose(file);
    return 0;
}

